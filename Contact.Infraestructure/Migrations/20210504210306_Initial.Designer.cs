// <auto-generated />
using System;
using Contact.Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Contact.Infraestructure.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    [Migration("20210504210306_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Contact.Core.Enitties.AccountMovement", b =>
                {
                    b.Property<int>("AccountMovementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MovimientoId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("Cantidad");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int>("MovementType")
                        .HasColumnType("int")
                        .HasColumnName("TipoMovimiento");

                    b.Property<DateTime>("RecorDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaRegistro");

                    b.HasKey("AccountMovementId");

                    b.HasIndex("BankAccountId");

                    b.ToTable("Movimiento");
                });

            modelBuilder.Entity("Contact.Core.Enitties.BankAccount", b =>
                {
                    b.Property<int>("BankAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CuentaId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Descripcion");

                    b.Property<decimal>("InitialBalance")
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("SaldoInicial");

                    b.Property<Guid>("Product")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Producto");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaRegistro");

                    b.HasKey("BankAccountId");

                    b.HasIndex("ClientId");

                    b.ToTable("Cuenta");
                });

            modelBuilder.Entity("Contact.Core.Enitties.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClienteId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("int")
                        .HasColumnName("NombreCompleto");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaRegistro");

                    b.HasKey("ClientId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Contact.Core.Enitties.AccountMovement", b =>
                {
                    b.HasOne("Contact.Core.Enitties.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });

            modelBuilder.Entity("Contact.Core.Enitties.BankAccount", b =>
                {
                    b.HasOne("Contact.Core.Enitties.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
